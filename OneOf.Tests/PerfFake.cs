// ===========================================================================
// Generated by PerfFake.tt
// ===========================================================================

using System;

namespace OneOf.Tests
{
    public abstract class PerfFakeBase
    {
        protected static readonly Random Ran = new Random();
        public FakeType Type { get; private set; }
        protected PerfFakeBase(FakeType type = FakeType.Base)
        {
            Type = type;
        }
    }
    public enum FakeType
    {
        Base = 0,
        One = 1,
        Two = 2,
        Three = 3,
        Four = 4,
        Five = 5,
        Six = 6
    }
    public class One : PerfFakeBase
    {
        public One() : base(FakeType.One){}
        public string OneProp { get; set; } = Ran.NextDouble().ToString();
    }
    public class Two : PerfFakeBase
    {
        public Two() : base(FakeType.Two){}
        public string TwoProp { get; set; } = Ran.NextDouble().ToString();
    }
    public class Three : PerfFakeBase
    {
        public Three() : base(FakeType.Three){}
        public string ThreeProp { get; set; } = Ran.NextDouble().ToString();
    }
    public class Four : PerfFakeBase
    {
        public Four() : base(FakeType.Four){}
        public string FourProp { get; set; } = Ran.NextDouble().ToString();
    }
    public class Five : PerfFakeBase
    {
        public Five() : base(FakeType.Five){}
        public string FiveProp { get; set; } = Ran.NextDouble().ToString();
    }
    public class Six : PerfFakeBase
    {
        public Six() : base(FakeType.Six){}
        public string SixProp { get; set; } = Ran.NextDouble().ToString();
    }
    public static class PerfOneOfs
    {
        public static OneOf<PerfFakeBase,One,Two,Three,Four> One = new One();
        public static OneOf<PerfFakeBase,One,Two,Three,Four> Two = new Two();
        public static OneOf<PerfFakeBase,One,Two,Three,Four> Three = new Three();
        public static OneOf<PerfFakeBase,One,Two,Three,Four> Four = new Four();
        public static OneOf<PerfFakeBase,One,Two,Three,Four> Five = new Five();
        public static OneOf<PerfFakeBase,One,Two,Three,Four> Six = new Six();
    }
}
